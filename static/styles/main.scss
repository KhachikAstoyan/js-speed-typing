@import url("https://fonts.googleapis.com/css2?family=Ubuntu+Mono:wght@400;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500&display=swap");

$bg-color: #f8f8f8;
$header-height: 3rem;
$main-ui-blue: rgb(73, 141, 219);
$hacker-ui-color: rgb(60, 255, 0);
$transition-speed: 80ms;
$incorrect-color: rgb(255, 0, 13);

$dark-bg: rgb(0, 0, 0);

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Ubuntu Mono", "Lucida console", monospace;
}

h2 {
  transition: color $transition-speed ease-in;
}

body {
  min-height: 100vh;
  background: $bg-color;
  transition: background $transition-speed ease-in;

  &.dark {
    background-color: $dark-bg;

    #startHeading {
      color: white;
    }

    .settings,
    .stats,
    header {
      background-color: black;
      border-color: rgb(22, 22, 22);
      * {
        color: #f4f5f7;
      }

      span {
        color: $hacker-ui-color;
      }
    }

    #app {
      .typing-practice {
        .overlay {
          background: -moz-linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, $dark-bg 100%);
          background: -webkit-linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, $dark-bg 100%);
          background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, $dark-bg 100%);

          &.inactive {
            background: $dark-bg;
          }
        }

        #words {
          span {
            color: $hacker-ui-color;

            &.focused {
              background-color: white;
              color: black;

              &.incorrect-temp {
                background-color: $incorrect-color;
                color: white;
              }
            }
          }
        }
      }
    }
  }
}

header {
  width: 100%;
  height: $header-height;
  background-color: black;
  color: white;
  border-bottom: 1px solid transparent;
  transition: border-color $transition-speed ease-in;

  .navbar {
    .logo {
      line-height: $header-height;
      text-align: center;
    }
  }
}

.container {
  margin: 0 auto;
  width: 900px;
  max-width: 90%;
}

#app-wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  height: calc(100vh - 3rem);
  position: relative;
}

#app {
  h2 {
    text-align: center;
  }
  .typing-practice {
    position: relative;

    .overlay {
      background: transparent;
      background: -moz-linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, $bg-color 100%);
      background: -webkit-linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, $bg-color 100%);
      background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, $bg-color 100%);
      transition: background $transition-speed ease-in;
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      z-index: 2;
      opacity: 0.95;

      &.inactive {
        background-color: $bg-color;
        opacity: 0.7;
      }
    }

    #words {
      font-size: 3.5rem;
      max-width: 100%;
      overflow: hidden;

      .start {
        text-align: center;
        z-index: 10;
      }

      p {
        display: inline;
      }

      span {
        display: inline;
        transition: color $transition-speed ease-in;
      }

      .focused {
        background-color: black;
        color: white;
        animation-duration: 500m;
        animation-name: cursor;
        animation-iteration-count: infinite;
        animation-timing-function: step-end;
        transition: none;
      }

      .correct {
        color: rgb(206, 206, 206);
      }

      .incorrect-temp {
        background-color: $incorrect-color;
        color: white;
      }
    }
  }
}

.settings,
.stats {
  background-color: white;
  color: white;
  padding: 30px;
  // border-radius: 25px;
  height: 100%;
  border: 1px solid rgb(235, 235, 235);
  border-top: none;
  border-bottom: none;
  letter-spacing: 0px;
  transition: background-color $transition-speed ease-in, border-color $transition-speed ease-in;

  #focus {
    width: 0;
    height: 0;
    opacity: 0;
  }

  * {
    color: black;
    transition: color $transition-speed ease-in;
    font-family: "Roboto Mono", monospace;
    font-size: 16px;
    letter-spacing: -0.2px;
  }

  h2 {
    margin-bottom: 10px;
    font-weight: 600;
    font-size: 1.3em;
  }

  h3 {
    // font-size: 1.2em;
  }

  p {
    color: black;
    // font-size: 1.2em;
  }

  span {
    color: rgb(73, 141, 219);
    font-weight: bold;
  }
}

.settings {
  position: absolute;
  top: 0px;
  right: 0px;

  ul {
    list-style: none;
  }

  @supports (-webkit-appearance: none) or (-moz-appearance: none) {
    input[type="checkbox"] {
      --active: #275efe;
      --active-inner: #fff;
      --focus: 2px rgba(39, 94, 254, 0.3);
      --border: #bbc1e1;
      --border-hover: #275efe;
      --background: #fff;
      --disabled: #f6f8ff;
      --disabled-inner: #e1e6f9;
      -webkit-appearance: none;
      -moz-appearance: none;
      height: 21px;
      outline: none;
      display: inline-block;
      vertical-align: top;
      position: relative;
      margin: 0;
      cursor: pointer;
      border: 1px solid var(--bc, var(--border));
      background: var(--b, var(--background));
      transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
      &:after {
        content: "";
        display: block;
        left: 0;
        top: 0;
        position: absolute;
        transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
      }
      &:checked {
        --b: var(--active);
        --bc: var(--active);
        --d-o: 0.3s;
        --d-t: 0.6s;
        --d-t-e: cubic-bezier(0.2, 0.85, 0.32, 1.2);
      }
      &:hover {
        &:not(:checked) {
          &:not(:disabled) {
            --bc: var(--border-hover);
          }
        }
      }
      &:focus {
        box-shadow: 0 0 0 var(--focus);
      }
      & + label {
        font-size: 14px;
        line-height: 21px;
        display: inline-block;
        vertical-align: top;
        cursor: pointer;
        margin-left: 4px;
      }
    }
    input[type="checkbox"] {
      &.switch {
        width: 38px;
        border-radius: 11px;
        &:after {
          left: 2px;
          top: 2px;
          border-radius: 50%;
          width: 15px;
          height: 15px;
          background: var(--ab, var(--border));
          transform: translateX(var(--x, 0));
        }
        &:checked {
          --ab: var(--active-inner);
          --x: 17px;
        }
        &:disabled {
          &:not(:checked) {
            &:after {
              opacity: 0.6;
            }
          }
        }
      }
    }
    input[type="radio"] {
      border-radius: 50%;
      &:after {
        width: 19px;
        height: 19px;
        border-radius: 50%;
        background: var(--active-inner);
        opacity: 0;
        transform: scale(var(--s, 0.7));
      }
      &:checked {
        --s: 0.5;
      }
    }
  }
}

.stats {
  position: absolute;
  top: 0px;
  left: 0px;
}
